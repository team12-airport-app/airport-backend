{
  "info": {
    "_postman_id": "e3a3a7f0-8df7-4f5b-9a2c-6d4b9b2b7e12",
    "name": "Team12 Flight Management API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Flight Management API collection (assignment Q1–Q4 + Admin CRUD for Airports, Airlines, Gates). Matches the current backend.\n\nVariables:\n- baseUrl: http://localhost:8080\n- airportCode: YYT (used by Gates create/filter)"
  },
  "item": [
    {
      "name": "Assignment / Reports",
      "item": [
        {
          "name": "Q1 - GET /cities",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/cities"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;",
                  "if (data.length > 0 && data[0].id) {",
                  "  pm.collectionVariables.set('testCityId', data[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Q2 - GET /aircraft-with-passengers",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/aircraft-with-passengers"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Q3a - GET /aircraft-with-airports",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/aircraft-with-airports"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;",
                  "if (data.length > 0 && data[0].id) {",
                  "  pm.collectionVariables.set('aircraftId', data[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Q3b - GET /aircraft/{{aircraftId}}/flights",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/aircraft/{{aircraftId}}/flights"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('aircraftId')) {",
                  "  throw new Error('aircraftId is not set. Run Q3a first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Q4 - GET /passengers-with-airports",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/passengers-with-airports"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin — Airports",
      "item": [
        {
          "name": "List Airports - GET /manage/airports",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/airports"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.expect(Array.isArray(data)).to.be.true;",
                  "// Set airportCode from first item if not already defined",
                  "if (!pm.collectionVariables.get('airportCode') && data.length > 0 && data[0].code) {",
                  "  pm.collectionVariables.set('airportCode', data[0].code);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Airport - POST /manage/airports",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/airports",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Airport\",\n  \"code\": \"TST\",\n  \"cityId\": 1\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 201', () => pm.response.to.have.status(201));",
                  "const data = pm.response.json();",
                  "pm.collectionVariables.set('createdAirportId', data.id);",
                  "pm.collectionVariables.set('airportCode', data.code);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Airport by ID - GET /manage/airports/{{createdAirportId}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/airports/{{createdAirportId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirportId')) {",
                  "  throw new Error('createdAirportId is not set. Run Create Airport first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Airport - PUT /manage/airports/{{createdAirportId}}",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/airports/{{createdAirportId}}",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Airport (Updated)\",\n  \"code\": \"TST\",\n  \"cityId\": 1\n}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirportId')) {",
                  "  throw new Error('createdAirportId is not set. Run Create Airport first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Airport - DELETE /manage/airports/{{createdAirportId}}",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{baseUrl}}/manage/airports/{{createdAirportId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirportId')) {",
                  "  throw new Error('createdAirportId is not set. Run Create Airport first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200 or 204', function () {",
                  "  pm.expect([200,204]).to.include(pm.response.code);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin — Airlines",
      "item": [
        {
          "name": "List Airlines - GET /manage/airlines",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/airlines"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "pm.expect(Array.isArray(pm.response.json())).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Airline - POST /manage/airlines",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/airlines",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"AC\",\n  \"name\": \"Air Canada\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 201', () => pm.response.to.have.status(201));",
                  "const data = pm.response.json();",
                  "pm.collectionVariables.set('createdAirlineId', data.id);",
                  "pm.collectionVariables.set('createdAirlineCode', data.code);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Airline by ID - GET /manage/airlines/{{createdAirlineId}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/airlines/{{createdAirlineId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirlineId')) {",
                  "  throw new Error('createdAirlineId is not set. Run Create Airline first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Airline - PUT /manage/airlines/{{createdAirlineId}}",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/airlines/{{createdAirlineId}}",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"AC\",\n  \"name\": \"Air Canada (Updated)\"\n}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirlineId')) {",
                  "  throw new Error('createdAirlineId is not set. Run Create Airline first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Airline - DELETE /manage/airlines/{{createdAirlineId}}",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{baseUrl}}/manage/airlines/{{createdAirlineId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdAirlineId')) {",
                  "  throw new Error('createdAirlineId is not set. Run Create Airline first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200 or 204', function () {",
                  "  pm.expect([200,204]).to.include(pm.response.code);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin — Gates",
      "item": [
        {
          "name": "List Gates - GET /manage/gates",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/gates"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "pm.expect(Array.isArray(pm.response.json())).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Gate - POST /manage/gates",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/gates",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"A7\",\n  \"description\": \"Gate A7\",\n  \"airportCode\": \"{{airportCode}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 201', () => pm.response.to.have.status(201));",
                  "const data = pm.response.json();",
                  "pm.collectionVariables.set('createdGateId', data.id);",
                  "pm.collectionVariables.set('createdGateCode', data.code);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Gates by Airport - GET /manage/gates?airport={{airportCode}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/gates?airport={{airportCode}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));",
                  "pm.expect(Array.isArray(pm.response.json())).to.be.true;"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Gate by ID - GET /manage/gates/{{createdGateId}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/manage/gates/{{createdGateId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdGateId')) {",
                  "  throw new Error('createdGateId is not set. Run Create Gate first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Gate - PUT /manage/gates/{{createdGateId}} (all fields required)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": "{{baseUrl}}/manage/gates/{{createdGateId}}",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"A7\",\n  \"description\": \"Gate A7 (Updated)\",\n  \"airportCode\": \"{{airportCode}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdGateId')) {",
                  "  throw new Error('createdGateId is not set. Run Create Gate first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Gate - DELETE /manage/gates/{{createdGateId}}",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{baseUrl}}/manage/gates/{{createdGateId}}"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "if (!pm.collectionVariables.get('createdGateId')) {",
                  "  throw new Error('createdGateId is not set. Run Create Gate first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('status 200 or 204', function () {",
                  "  pm.expect([200,204]).to.include(pm.response.code);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "airportCode",
      "value": "YYT",
      "type": "string"
    },
    {
      "key": "testCityId",
      "value": "",
      "type": "string"
    },
    {
      "key": "aircraftId",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdAirportId",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdAirlineId",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdAirlineCode",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdGateId",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdGateCode",
      "value": "",
      "type": "string"
    }
  ]
}